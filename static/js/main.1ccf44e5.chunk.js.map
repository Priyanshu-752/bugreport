{"version":3,"sources":["components/Login/index.js","components/Dashboard/Header.js","components/Dashboard/Table.js","config/firestore.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Login","Header","_ref","setIsAdding","setIsAuthenticated","_jsx","children","Table","bugReports","className","_jsxs","length","map","report","_report$timestamp","name","email","bug_information","bug_type","href","drive_link","target","rel","environment_description","Date","timestamp","seconds","toLocaleString","id","colSpan","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","Dashboard","setBugReports","useState","useEffect","async","reports","getDocs","collection","docs","doc","_objectSpread","data","error","console","Swal","fire","icon","title","text","getBugReports","App","isAuthenticated","JSON","parse","localStorage","getItem","_Fragment","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"8MA6GeA,I,QC7FAC,MAZAC,IAA0C,IAAzC,YAAEC,EAAW,mBAAEC,GAAoBF,EACjD,OACEG,cAAA,UAAAC,SACED,cAAA,MAAAC,SAAI,wBAKG,ECmCEC,MA7CDL,IAAqB,IAApB,WAAEM,GAAYN,EAC3B,OACEG,cAAA,OAAKI,UAAU,gBAAeH,SAC5BI,eAAA,SAAOD,UAAU,gBAAeH,SAAA,CAC9BD,cAAA,SAAAC,SACEI,eAAA,MAAAJ,SAAA,CACED,cAAA,MAAAC,SAAI,SACJD,cAAA,MAAAC,SAAI,UACJD,cAAA,MAAAC,SAAI,oBACJD,cAAA,MAAAC,SAAI,aACJD,cAAA,MAAAC,SAAI,eACJD,cAAA,MAAAC,SAAI,4BACJD,cAAA,MAAAC,SAAI,mBAGRD,cAAA,SAAAC,SACGE,EAAWG,OAAS,EACnBH,EAAWI,KAAIC,IAAM,IAAAC,EAAA,OACnBJ,eAAA,MAAAJ,SAAA,CACED,cAAA,MAAAC,SAAKO,EAAOE,OACZV,cAAA,MAAAC,SAAKO,EAAOG,QACZX,cAAA,MAAAC,SAAKO,EAAOI,kBACZZ,cAAA,MAAAC,SAAKO,EAAOK,WACZb,cAAA,MAAAC,SACED,cAAA,KAAGc,KAAMN,EAAOO,WAAYC,OAAO,SAASC,IAAI,sBAAqBhB,SAClEO,EAAOO,eAGZf,cAAA,MAAAC,SAAKO,EAAOU,0BACZlB,cAAA,MAAAC,SAAK,IAAIkB,KAAiC,KAAZ,QAAhBV,EAAAD,EAAOY,iBAAS,IAAAX,OAAA,EAAhBA,EAAkBY,UAAgBC,qBAXzCd,EAAOe,GAYX,IAGPvB,cAAA,MAAAC,SACED,cAAA,MAAIwB,QAAS,EAAGpB,UAAU,cAAaH,SAAC,qCAO5C,E,eCpCV,MAWMwB,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOJC,EAAKC,YAAaV,GCqBhBW,MAjCGvC,IAA6B,IAA5B,mBAAEE,GAAoBF,EACvC,MAAOM,EAAYkC,GAAiBC,mBAAS,IAwB7C,OAJAC,qBAAU,KAlBYC,WACpB,IACE,MACMC,SADsBC,YAAQC,YAAWT,EAAI,gBACrBU,KAAKrC,KAAIsC,GAAGC,YAAA,CACxCvB,GAAIsB,EAAItB,IACLsB,EAAIE,UAETV,EAAcI,EAChB,CAAE,MAAOO,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CE,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,gEAEV,GAIAC,EAAe,GACd,IAGDlD,eAAA,OAAKD,UAAU,YAAWH,SAAA,CACxBD,cAACJ,EAAM,CAACG,mBAAoBA,IAC5BC,cAACE,EAAK,CAACC,WAAYA,MACf,ECfKqD,MAlBHA,KACV,MAAOC,EAAiB1D,GAAsBuC,mBAAS,MAMvD,OAJAC,qBAAU,KACRxC,EAAmB2D,KAAKC,MAAMC,aAAaC,QAAQ,qBAAqB,GACvE,IAGD7D,cAAA8D,WAAA,CAAA7D,SAEID,cAACoC,EAAS,CAACrC,mBAAoBA,KAIhC,ECdMgE,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OACHnE,cAACoE,IAAMC,WAAU,CAAApE,SACfD,cAACwD,EAAG,M","file":"static/js/main.1ccf44e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\n\nconst Login = ({ setIsAuthenticated }) => {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const auth = getAuth();\n\n    if (document.activeElement.name === 'Login') {\n      try {\n        await signInWithEmailAndPassword(auth, email, password)\n        Swal.fire({\n          timer: 1500,\n          showConfirmButton: false,\n          willOpen: () => {\n            Swal.showLoading();\n          },\n          willClose: () => {\n            setIsAuthenticated(true);\n  \n            Swal.fire({\n              icon: 'success',\n              title: 'Successfully logged in!',\n              showConfirmButton: false,\n              timer: 1500,\n            });\n          },\n        });\n      } catch (error) {\n        Swal.fire({\n          timer: 1500,\n          showConfirmButton: false,\n          willOpen: () => {\n            Swal.showLoading();\n          },\n          willClose: () => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Error!',\n              text: 'Incorrect email or password.',\n              showConfirmButton: true,\n            });\n          },\n        });\n      }\n    } else if (document.activeElement.name === 'Register') {\n      try {\n        await createUserWithEmailAndPassword(auth, email, password)\n        Swal.fire({\n          timer: 1500,\n          showConfirmButton: false,\n          willOpen: () => {\n            Swal.showLoading();\n          },\n          willClose: () => {\n            setIsAuthenticated(true);\n  \n            Swal.fire({\n              icon: 'success',\n              title: 'Successfully registered and logged in!',\n              showConfirmButton: false,\n              timer: 1500,\n            });\n          },\n        });\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    \n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleLogin}>\n        <h1>Admin Login</h1>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"admin@example.com\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"qwerty\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <input style={{ marginTop: '12px' }} type=\"submit\" value=\"Login\" name=\"Login\" />\n        <input style={{ marginTop: '12px', marginLeft: '12px', backgroundColor: 'black' }} type=\"submit\" value=\"Register\" name=\"Register\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Logout from '../Logout';\n\nconst Header = ({ setIsAdding, setIsAuthenticated }) => {\n  return (\n    <header>\n      <h1>Pay Per Bug Report</h1>\n      {/* <div style={{ marginTop: '30px', marginBottom: '18px' }}>\n        <button onClick={() => setIsAdding(true)}>Add Employee</button>\n        <Logout setIsAuthenticated={setIsAuthenticated} />\n      </div> */}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Table = ({ bugReports }) => {\n  return (\n    <div className=\"contain-table\">\n      <table className=\"striped-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Bug Information</th>\n            <th>Bug Type</th>\n            <th>Drive Link</th>\n            <th>Environment Description</th>\n            <th>Timestamp</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bugReports.length > 0 ? (\n            bugReports.map(report => (\n              <tr key={report.id}>\n                <td>{report.name}</td>\n                <td>{report.email}</td>\n                <td>{report.bug_information}</td>\n                <td>{report.bug_type}</td>\n                <td>\n                  <a href={report.drive_link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {report.drive_link}\n                  </a>\n                </td>\n                <td>{report.environment_description}</td>\n                <td>{new Date(report.timestamp?.seconds * 1000).toLocaleString()}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={7} className=\"text-center\">\n                No bug reports available\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCf9edDYmHyz_-jHLvjaBhl1UyyajDm-G8',\n  authDomain: \"gigs-and-teams.firebaseapp.com\",\n  projectId: \"gigs-and-teams\",\n  storageBucket: \"gigs-and-teams.firebasestorage.app\",\n  messagingSenderId: \"652675199093\",\n  appId: \"1:652675199093:web:baf98df4872ecfce13c83c\",\n  measurementId: \"G-30NCG92VFK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const db = getFirestore(app);","import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\n\nimport Header from './Header';\nimport Table from './Table';\n\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../../config/firestore';\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [bugReports, setBugReports] = useState([]);\n\n  const getBugReports = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'bugReports'));\n      const reports = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setBugReports(reports);\n    } catch (error) {\n      console.error('Error fetching bug reports:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Failed to fetch data from Firestore. Please try again later.',\n      });\n    }\n  };\n\n  useEffect(() => {\n    getBugReports();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header setIsAuthenticated={setIsAuthenticated} />\n      <Table bugReports={bugReports} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\n\nimport Login from '../Login';\nimport Dashboard from '../Dashboard';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n\n  useEffect(() => {\n    setIsAuthenticated(JSON.parse(localStorage.getItem('is_authenticated')));\n  }, []);\n\n  return (\n    <>\n      {/* {isAuthenticated ? ( */}\n        <Dashboard setIsAuthenticated={setIsAuthenticated} />\n      {/* ) : (\n        <Login setIsAuthenticated={setIsAuthenticated} />\n      )} */}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}